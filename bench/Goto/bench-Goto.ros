#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#


#+sbcl (sb-posix:chdir "../../")
(ql:quickload "cl3a" :silent t)
#+sbcl (sb-posix:chdir "./bench/Goto")


(defun run-bench (n t1 t2 t3)
  (declare (type fixnum n b))
  (let ((ma (make-array (list n n)
                        :element-type 'double-float))
        (mb (make-array (list n n)
                        :element-type 'double-float))
        (mc (make-array (list n n)
                        :element-type 'double-float)))
    (declare (type (simple-array double-float (* *)) ma mb mc))
    (dotimes (i n)
      (dotimes (j n)
        (setf (aref ma i j) (random 1d0))
        (setf (aref mb i j) (random 1d0))))
    (time (cl3a:dm*m t1 t2 t3 ma mb mc))))


(defun main (n-str &rest argv)
  (declare (ignorable argv))
  (let ((n (parse-integer n-str)))
    (declare (type fixnum n))
    (format t "t1 = t2 = n~%")
    (do ((t3 8 (+ t3 8)))
        ((> t3 200))
      (format t "t3 = ~A~%" t3)
      (run-bench n n n t3))
    (format t "t2 = t3 = n~%")
    (do ((t1 8 (+ t1 8)))
        ((> t1 200))
      (format t "t1 = ~A~%" t1)
      (run-bench n t1 n n))
        (format t "t1 = t2 = n~%")
    (do ((t2 8 (+ t2 8)))
        ((> t2 200))
      (format t "t2 = ~A~%" t2)
      (run-bench n n t2 n))))
